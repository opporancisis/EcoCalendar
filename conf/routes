# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET    /                                 controllers.HomePageController.index
GET    /homePage/edit                    controllers.HomePageController.edit
POST   /homePage/edit                    controllers.HomePageController.doEdit

GET    /assets/javascripts/routes.js     controllers.Application.jsRoutes
GET    /assets/javascripts/messages.js   controllers.Application.jsMessages

GET    /sys/settings                     controllers.SettingController.edit
POST   /sys/settings                     controllers.SettingController.doEdit

GET    /account                          controllers.Account.profile
POST   /account                          controllers.Account.doChangeProfile
GET    /account/password                 controllers.Account.changePersonalPassword
POST   /account/password                 controllers.Account.doChangePersonalPassword
GET    /account/link                     controllers.Account.askLink
POST   /account/link                     controllers.Account.doLink
GET    /account/add                      controllers.Account.link
GET    /account/unverified               controllers.Signup.unverified
GET    /account/message                  controllers.MessageController.list
GET    /account/message/:id              controllers.MessageController.read(id: Long)
POST   /account/message/removeMany       controllers.MessageController.removeMany
POST   /account/message/markAsReadMany   controllers.MessageController.markAsReadMany

GET    /login                            controllers.Application.login
POST   /login                            controllers.Application.doLogin

GET    /logout                           com.feth.play.module.pa.controllers.AuthenticateDI.logout
GET    /authenticate/:provider           com.feth.play.module.pa.controllers.AuthenticateDI.authenticate(provider: String)

GET    /signup                           controllers.Application.signup
POST   /signup                           controllers.Application.doSignup

GET    /authenticate/:provider/denied    controllers.Signup.oAuthDenied(provider: String)

GET    /accounts/verify/:token           controllers.Signup.verify(token: String)
GET    /accounts/exists                  controllers.Signup.exists

GET    /accounts/password/reset/:token   controllers.Signup.resetPassword(token: String)
POST   /accounts/password/reset          controllers.Signup.doResetPassword

GET    /accounts/verify                  controllers.Account.verifyEmail


GET    /accounts/merge                   controllers.Account.askMerge
POST   /accounts/merge                   controllers.Account.doMerge

GET    /login/password/forgot            controllers.Signup.forgotPassword(email: String ?= "")
POST   /login/password/forgot            controllers.Signup.doForgotPassword

# Map static resources from the /public folder to the /assets URL path
GET    /assets/*file                     controllers.Assets.versioned(path="/public", file)

GET    /user/add                         controllers.UserController.add
POST   /user/add                         controllers.UserController.doAdd
GET    /user/edit/:user                  controllers.UserController.edit(user: User)
POST   /user/edit/:user                  controllers.UserController.doEdit(user: User)
POST   /user/remove/:user                controllers.UserController.remove(user: User)
GET    /user/passwd/:user                controllers.UserController.changePassword(user: User)
POST   /user/passwd/:user                controllers.UserController.doChangePassword(user: User)
GET    /user/:user                       controllers.UserController.details(user: User)
GET    /user                             controllers.UserController.list

GET    /file/edit/:file                  controllers.FileController.edit(file: models.file.UploadedFile)
POST   /file/edit/:file                  controllers.FileController.doEdit(file: models.file.UploadedFile)
GET    /file/add                         controllers.FileController.add
POST   /file/add                         controllers.FileController.doAdd
POST   /file/remove/:file                controllers.FileController.remove(file: models.file.UploadedFile)
GET    /file/:file                       controllers.FileController.get(file: models.file.UploadedFile)
GET    /file/preview/:file               controllers.FileController.preview(file: models.file.UploadedFile)
GET    /file                             controllers.FileController.list

GET    /blog/edit/:post                  controllers.BlogController.edit(post: models.blog.BlogPost)
POST   /blog/edit/:post                  controllers.BlogController.doEdit(post: models.blog.BlogPost)
GET    /blog/add                         controllers.BlogController.add
POST   /blog/add                         controllers.BlogController.doAdd
POST   /blog/remove/:post                controllers.BlogController.remove(post: models.blog.BlogPost)
GET    /blog                             controllers.BlogController.list

POST   /stdPage/move/:page/by/:by        controllers.StandardPageController.moveBy(page: models.standardPage.StandardPage, by: Long)
GET    /stdPage/edit/:page               controllers.StandardPageController.edit(page: models.standardPage.StandardPage)
POST   /stdPage/edit/:page               controllers.StandardPageController.doEdit(page: models.standardPage.StandardPage)
GET    /stdPage/add                      controllers.StandardPageController.add
POST   /stdPage/add                      controllers.StandardPageController.doAdd
POST   /stdPage/remove/:page             controllers.StandardPageController.remove(page: models.standardPage.StandardPage)
GET    /stdPage/:page                    controllers.StandardPageController.getStdPage(page: models.standardPage.StandardPage)
GET    /stdPage                          controllers.StandardPageController.list

GET    /grandevent/add                   controllers.GrandEventController.add
POST   /grandevent/add                   controllers.GrandEventController.doAdd
GET    /grandevent/edit/:event           controllers.GrandEventController.edit(event: models.event.GrandEvent)
POST   /grandevent/edit/:event           controllers.GrandEventController.doEdit(event: models.event.GrandEvent)
POST   /grandevent/remove/:event         controllers.GrandEventController.remove(event: models.event.GrandEvent)
GET    /grandevent/:event                controllers.GrandEventController.details(event: models.event.GrandEvent)
GET    /grandevent                       controllers.GrandEventController.list

GET    /event/tag/add                    controllers.EventTagController.add
POST   /event/tag/add                    controllers.EventTagController.doAdd
GET    /event/tag/edit/:tag              controllers.EventTagController.edit(tag: models.event.tag.EventTag)
POST   /event/tag/edit/:tag              controllers.EventTagController.doEdit(tag: models.event.tag.EventTag)
POST   /event/tag/remove/:tag            controllers.EventTagController.remove(tag: models.event.tag.EventTag)
GET    /event/tag                        controllers.EventTagController.list

GET    /event/add                        controllers.EventController.add
POST   /event/add                        controllers.EventController.doAdd
GET    /event/edit/:event                controllers.EventController.edit(event: models.event.Event)
POST   /event/edit/:event                controllers.EventController.doEdit(event: models.event.Event)
POST   /event/removeMany                 controllers.EventController.removeMany
POST   /event/export                     controllers.EventController.exportEvents()
GET    /event/list                       controllers.EventController.list
POST   /event/list                       controllers.EventController.doChangeInterval
GET    /event/calendar                   controllers.EventController.calendar
POST   /event/getEventsJson              controllers.EventController.getEventsJson
GET    /event/map                        controllers.EventController.map
GET    /event/:event                     controllers.EventController.view(event: models.event.Event)

GET    /organization/add                 controllers.OrganizationController.add
POST   /organization/add                 controllers.OrganizationController.doAdd
GET    /organization/edit/:org           controllers.OrganizationController.edit(org: models.organization.Organization)
POST   /organization/edit/:org           controllers.OrganizationController.doEdit(org: models.organization.Organization)
POST   /organization/remove/:org         controllers.OrganizationController.remove(org: models.organization.Organization)
GET    /organization/:org                controllers.OrganizationController.details(org: models.organization.Organization)
GET    /organization                     controllers.OrganizationController.list

GET    /geo/country/add                  controllers.CountryController.add
POST   /geo/country/add                  controllers.CountryController.doAdd
GET    /geo/country/edit/:country        controllers.CountryController.edit(country: models.geo.Country)
POST   /geo/country/edit/:country        controllers.CountryController.doEdit(country: models.geo.Country)
POST   /geo/country/remove/:country      controllers.CountryController.remove(country: models.geo.Country)
GET    /geo/country                      controllers.CountryController.list

GET    /geo/city/add                     controllers.CityController.add
POST   /geo/city/add                     controllers.CityController.doAdd
GET    /geo/city/edit/:city              controllers.CityController.edit(city: models.geo.City)
POST   /geo/city/edit/:city              controllers.CityController.doEdit(city: models.geo.City)
POST   /geo/city/remove/:city            controllers.CityController.remove(city: models.geo.City)
GET    /geo/city                         controllers.CityController.list

# ALLWAYS LAST LINE!!!!
#GET    /*path                            controllers.StandardPageController.getStdPage(path: String)
